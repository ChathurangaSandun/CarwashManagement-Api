// <auto-generated />
using System;
using CliveKumara.CarwashManagement.Api.Models.DatabaseModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CliveKumara.CarwashManagement.Api.Migrations
{
    [DbContext(typeof(CarWashManagementDbContext))]
    [Migration("20200529060422_seed-shop")]
    partial class seedshop
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CWM.Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Color = "#ff8a65",
                            CreatedDate = new DateTime(2020, 5, 29, 14, 4, 21, 655, DateTimeKind.Local).AddTicks(8782),
                            Icon = "directions_car",
                            Image = "assets/images/banner3.jpg",
                            Name = "Car Wash",
                            Type = "CARWASH",
                            UpdatedDate = new DateTime(2020, 5, 29, 14, 4, 21, 657, DateTimeKind.Local).AddTicks(4828)
                        },
                        new
                        {
                            Id = 2L,
                            Color = "#5d6d7e",
                            CreatedDate = new DateTime(2020, 5, 29, 14, 4, 21, 660, DateTimeKind.Local).AddTicks(526),
                            Icon = "directions_car",
                            Image = "assets/images/banner4.jpg",
                            Name = "Car Service",
                            Type = "CARSERVICE",
                            UpdatedDate = new DateTime(2020, 5, 29, 14, 4, 21, 660, DateTimeKind.Local).AddTicks(575)
                        },
                        new
                        {
                            Id = 3L,
                            Color = "#a569bd",
                            CreatedDate = new DateTime(2020, 5, 29, 14, 4, 21, 660, DateTimeKind.Local).AddTicks(977),
                            Icon = "directions_car",
                            Image = "assets/images/banner5.jpg",
                            Name = "Car Parts",
                            Type = "CARPARTS",
                            UpdatedDate = new DateTime(2020, 5, 29, 14, 4, 21, 660, DateTimeKind.Local).AddTicks(985)
                        });
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.Location", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Lat")
                        .HasColumnType("real");

                    b.Property<float>("Long")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CWM.Locations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Nugegoda",
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(4924),
                            Lat = 79.86965f,
                            Long = 6.864756f,
                            Name = "Echo Zone - 3M Tint",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(4934)
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Colombo 6",
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(5331),
                            Lat = 79.86487f,
                            Long = 6.87702f,
                            Name = "Alpine Car Wash",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(5333)
                        },
                        new
                        {
                            Id = 3L,
                            Address = "Colombo",
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(5371),
                            Lat = 79.79967f,
                            Long = 6.864813f,
                            Name = "Staford motors ",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(5373)
                        });
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.Service", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CWM.Services");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(7530),
                            Icon = "",
                            Title = "Wash",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(7536)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(7792),
                            Icon = "",
                            Title = "Vax",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(7795)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(7827),
                            Icon = "",
                            Title = "Full Body",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(7829)
                        });
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.Shop", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hours")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceRangeStart")
                        .HasColumnType("float");

                    b.Property<double>("PriceRangeStop")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("RateText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ShopOwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TabSettings")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("ShopOwnerId")
                        .IsUnique();

                    b.ToTable("CWM.Shops");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "Nugegoda",
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 662, DateTimeKind.Utc).AddTicks(7095),
                            Description = "Loresipsm",
                            Hour = "9-6",
                            Hours = "{}",
                            Image = "",
                            LocationId = 1L,
                            Mobile = "0718256773",
                            NumOfRate = 0,
                            Phone = "0718256773",
                            PriceRangeStart = 250.0,
                            PriceRangeStop = 6500.0,
                            Rate = 0.0,
                            ShopOwnerId = 1L,
                            Status = "Featured",
                            SubTitle = "Echo Zone - 3M Tint",
                            TabSettings = "{}",
                            Title = "Echo Zone - 3M Tint",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 662, DateTimeKind.Utc).AddTicks(7115)
                        },
                        new
                        {
                            Id = 2L,
                            Address = "Colombo 6",
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 662, DateTimeKind.Utc).AddTicks(7993),
                            Description = "Loresipsm",
                            Hour = "9-6",
                            Hours = "{}",
                            Image = "",
                            LocationId = 2L,
                            Mobile = "0718256773",
                            NumOfRate = 0,
                            Phone = "0718256773",
                            PriceRangeStart = 250.0,
                            PriceRangeStop = 6500.0,
                            Rate = 0.0,
                            ShopOwnerId = 2L,
                            Status = "Featured",
                            SubTitle = "Alpine Car Wash",
                            TabSettings = "{}",
                            Title = "Alpine Car Wash",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 662, DateTimeKind.Utc).AddTicks(7999)
                        },
                        new
                        {
                            Id = 3L,
                            Address = "Colombo",
                            CategoryId = 1L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 662, DateTimeKind.Utc).AddTicks(8056),
                            Description = "Loresipsm",
                            Hour = "9-6",
                            Hours = "{}",
                            Image = "",
                            LocationId = 3L,
                            Mobile = "0718256773",
                            NumOfRate = 0,
                            Phone = "0718256773",
                            PriceRangeStart = 250.0,
                            PriceRangeStop = 6500.0,
                            Rate = 0.0,
                            ShopOwnerId = 3L,
                            Status = "Featured",
                            SubTitle = "Staford motors ",
                            TabSettings = "{}",
                            Title = "Staford motors ",
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 662, DateTimeKind.Utc).AddTicks(8058)
                        });
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.ShopImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ShopId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShopId");

                    b.ToTable("CWM.ShopImage");
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.ShopOwner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CWM.ShopOwner");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(9849),
                            FullName = "Chathuranga",
                            Photo = "",
                            Rate = 0.0,
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 660, DateTimeKind.Utc).AddTicks(9854)
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 661, DateTimeKind.Utc).AddTicks(91),
                            FullName = "sandun",
                            Photo = "",
                            Rate = 0.0,
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 661, DateTimeKind.Utc).AddTicks(94)
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 661, DateTimeKind.Utc).AddTicks(124),
                            FullName = "kumara",
                            Photo = "",
                            Rate = 0.0,
                            UpdatedDate = new DateTime(2020, 5, 29, 6, 4, 21, 661, DateTimeKind.Utc).AddTicks(126)
                        });
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.ShopService", b =>
                {
                    b.Property<long>("ServiceId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShopId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ServiceId", "ShopId");

                    b.HasIndex("ShopId");

                    b.ToTable("CWM.ShopServices");
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.Shop", b =>
                {
                    b.HasOne("CliveKumara.CarwashManagement.Api.Models.Entities.Category", "Category")
                        .WithMany("Shops")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CliveKumara.CarwashManagement.Api.Models.Entities.Location", "Location")
                        .WithOne("Shop")
                        .HasForeignKey("CliveKumara.CarwashManagement.Api.Models.Entities.Shop", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CliveKumara.CarwashManagement.Api.Models.Entities.ShopOwner", "ShopOwner")
                        .WithOne("Shop")
                        .HasForeignKey("CliveKumara.CarwashManagement.Api.Models.Entities.Shop", "ShopOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.ShopImage", b =>
                {
                    b.HasOne("CliveKumara.CarwashManagement.Api.Models.Entities.Shop", "Shop")
                        .WithMany("ShopImages")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CliveKumara.CarwashManagement.Api.Models.Entities.ShopService", b =>
                {
                    b.HasOne("CliveKumara.CarwashManagement.Api.Models.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CliveKumara.CarwashManagement.Api.Models.Entities.Shop", "Shop")
                        .WithMany("ShopServices")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
